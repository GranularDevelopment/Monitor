<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:viewModelBase="clr-namespace:Monitor;assembly=Monitor"
             xmlns:behaviors="clr-namespace:Monitor.Behaviors;assembly=Monitor"
             xmlns:converters="clr-namespace:Monitor.Converters; assembly=Monitor"
             xmlns:local="clr-namespace:Monitor.Renderers;assembly=Monitor"
             viewModelBase:ViewModelLocator.AutoWireViewModel="true"
             x:Class="Monitor.SignUpView"
             >
<ContentPage.Title>
        
    <OnPlatform
            x:TypeArguments="x:String"
            iOS="Sign Up"/>
    </ContentPage.Title>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseConverter x:Key="boolNegation" />
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
            <converters:BooleanToObjectConverter x:Key="boolToStyleImage"
                                              x:TypeArguments="Style">

      <!--  <converters:BooleanToObjectConverter.FalseObject>
          <Style TargetType="Image">
            <Setter Property="HeightRequest" Value="20" />
            <Setter Property="Source" Value="error.png" />
          </Style>
        </converters:BooleanToObjectConverter.FalseObject>-->

        <converters:BooleanToObjectConverter.TrueObject>
          <Style TargetType="Image">
            <Setter Property="HeightRequest" Value="20" />
            <Setter Property="Source" Value="success.png" />
          </Style>
        </converters:BooleanToObjectConverter.TrueObject>

        </converters:BooleanToObjectConverter>

        <Style x:Key="baseStyle" TargetType="Label">
            <Setter Property="XAlign" Value="Start" />
            <Setter Property="YAlign" Value="Center" />
            <Setter Property="FontSize" Value="Micro" />
            <Setter Property="FontAttributes" Value="Italic" />
        </Style>
            
        <converters:BooleanToObjectConverter x:Key="boolToStyleEmail"
                                           x:TypeArguments="Style">

        <converters:BooleanToObjectConverter.FalseObject>
           <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextColor" Value="#F44336"/>
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Text" Value="Enter a valid email" />
          </Style>
        </converters:BooleanToObjectConverter.FalseObject>
        
        <converters:BooleanToObjectConverter.TrueObject>
          <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextColor" Value="#4CAF50" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Text" Value="Your email looks good" />
          </Style>
        </converters:BooleanToObjectConverter.TrueObject>

        </converters:BooleanToObjectConverter>

          <converters:BooleanToObjectConverter x:Key="boolToStylePassword"
                                           x:TypeArguments="Style">

        <converters:BooleanToObjectConverter.FalseObject>
           <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextColor" Value="#F44336"/>
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Text" Value="Enter a valid password" />
          </Style>
        </converters:BooleanToObjectConverter.FalseObject>
        
        <converters:BooleanToObjectConverter.TrueObject>
          <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextColor" Value="#4CAF50" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Text" Value="Your password looks good" />
          </Style>
        </converters:BooleanToObjectConverter.TrueObject>

        </converters:BooleanToObjectConverter>
        </ResourceDictionary>
    </ContentPage.Resources>
      <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <On Platform="iOS" Value="0, 20, 0, 0" />
        </OnPlatform>
    </ContentPage.Padding>
    <ScrollView>
        <StackLayout> 

            <Label Text="Create an Account"
                   Style="{StaticResource labelPrimaryStyle}"
                   HorizontalOptions="Center"
                   Margin="0,0,0,40"/>

     <Grid Padding="0,40,0,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="40" />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      
      </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="40" />
      </Grid.ColumnDefinitions> 

        <local:NoHelperEntry
            Grid.Row="0"
            Grid.Column="1"
            Style="{StaticResource entryStyle}"
            x:Name="usernameEntry"
            Placeholder="Email"
            Text="{Binding Username.Value, Mode=TwoWay}" >
                <Entry.Behaviors>
                    <behaviors:EmailValidatorBehavior x:Name="emailValidator"/>
                </Entry.Behaviors>
                  <Entry.Triggers>
                    <DataTrigger
                            TargetType="Entry"
                            Binding="{Binding Username.IsValid}"
                            Value="False">
                    </DataTrigger>
                </Entry.Triggers>
        </local:NoHelperEntry>

            <Image Grid.Row="0" 
                   Grid.Column="2"
                   x:Name="emailSuccessErrorImage"
                   Style="{Binding Source={x:Reference emailValidator}, 
                                Path=IsValid, 
                                Converter={StaticResource boolToStyleImage}}"/>

            <Label 
                  Grid.Row="1" 
                  Grid.Column="1" 
                  HorizontalOptions="Center" 
                  IsVisible="{Binding Source={x:Reference emailValidator}, 
                                Path=IsValid,
                                Converter={StaticResource boolNegation}}"
                  Text="{Binding Username.Errors, Converter={StaticResource FirstValidationErrorConverter}"
                  Style="{StaticResource ValidationErrorLabelStyle}" />

            <!--<Label 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    HorizontalOptions="Center" 
                    Style="{Binding Source={x:Reference emailValidator}, 
                                Path=IsValid,
                                Converter={StaticResource boolToStyleEmail}}" />

-->            <Entry 
                   Grid.Row="2"
                   Grid.Column="1"
                   x:Name="passwordEntry" 
                   Style="{StaticResource entryStyle}"
                   IsPassword="true" 
                   Placeholder="Password" 
                   Text="{Binding Password.Value, Mode=TwoWay}">
                   <Entry.Behaviors>
                    <behaviors:PasswordValidatorBehavior x:Name="minValidator"/>
                </Entry.Behaviors>
                 <Entry.Triggers>
                    <DataTrigger
                            TargetType="Entry"
                            Binding="{Binding Password.IsValid}"
                            Value="False">
                    </DataTrigger>
                </Entry.Triggers>
            </Entry>

                <Image Grid.Row="2" 
                   Grid.Column="2"
                   x:Name="passwordSuccessErrorImage"
                   Style="{Binding Source={x:Reference minValidator}, 
                                Path=IsValid, 
                                Converter={StaticResource boolToStyleImage}}"/>

            <Label 
                  Grid.Row="3" 
                  Grid.Column="1" 
                  HorizontalOptions="Center" 
                  IsVisible="{Binding Source={x:Reference minValidator}, 
                                Path=IsValid,
                                Converter={StaticResource boolNegation}}"
                  Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}"
                  Style="{StaticResource ValidationErrorLabelStyle}" />

              </Grid>
            
          <StackLayout Style="{StaticResource footerStyle}" >

            <ActivityIndicator 
            HorizontalOptions="FillAndExpand"
            VerticalOptions="FillAndExpand"
            IsRunning="{Binding IsBusy}"
            IsVisible="{Binding IsBusy}"
            />
                
            <Button Style="{StaticResource submitButtonStyle}"
                    Text="[ Sign Up ]"
                    Command="{Binding SignUpCommand}"
                        />
        </StackLayout>
        </StackLayout>
    </ScrollView>
</ContentPage>
