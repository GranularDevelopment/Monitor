<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:viewModelBase="clr-namespace:Monitor;assembly=Monitor"
             xmlns:behaviors="clr-namespace:Monitor.Behaviors;assembly=Monitor"
             xmlns:converters="clr-namespace:Monitor.Converters;assembly=Monitor"
             xmlns:local="clr-namespace:Monitor.Renderers;assembly=Monitor"
             viewModelBase:ViewModelLocator.AutoWireViewModel="true"
             x:Class="Monitor.AddView"
             >

    <ContentPage.Resources> 
    <ResourceDictionary>
        <converters:ValueChangedEventArgsConverter x:Key="ValueChangedEventArgsConverter" />

            <converters:InverseConverter x:Key="boolNegation" />
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
             <converters:BooleanToObjectConverter x:Key="boolToStyleImage"
                                              x:TypeArguments="Style">

            <converters:BooleanToObjectConverter.TrueObject>
                <Style TargetType="Image">
                 <Setter Property="HeightRequest" Value="20" />
                 <Setter Property="Source" Value="success.png" />
                </Style>
            </converters:BooleanToObjectConverter.TrueObject>

        </converters:BooleanToObjectConverter>

            <Style x:Key="baseStyle" TargetType="Label">
                <Setter Property="XAlign" Value="Start" />
                <Setter Property="YAlign" Value="Center" />
                <Setter Property="FontSize" Value="Micro" />
                <Setter Property="FontAttributes" Value="Italic" />
            </Style>
            
    </ResourceDictionary>
</ContentPage.Resources>
 <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <On Platform="iOS" Value="0, 20, 0, 0" />
        </OnPlatform>
    </ContentPage.Padding>
    <ContentPage.Content>
    <ScrollView>
    <StackLayout>


    <Grid Padding="0,40,0,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="40" />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      
      </Grid.RowDefinitions>

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="40" />
      </Grid.ColumnDefinitions> 

        <Label HorizontalOptions="Center" 
               Text="Monitor Name"
               Style="{StaticResource labelSecondaryStyle}"
               Grid.Row="0"
               Grid.Column="1"
               />

         <local:NoHelperEntry
            Grid.Row="1"
            Grid.Column="1"
            Style="{StaticResource entryStyle}"
            x:Name="nameEntry"
            Placeholder="Name"
            Text="{Binding Name.Value, Mode=TwoWay}" >
                <Entry.Behaviors>
                    <behaviors:NonEmptyValidatorBehavior x:Name="nonEmptyValidator"/>
                </Entry.Behaviors>
        </local:NoHelperEntry>

            <Image Grid.Row="1" 
                   Grid.Column="2"
                   x:Name="nameSuccessErrorImage"
                   Style="{Binding Source={x:Reference nonEmptyValidator}, 
                                Path=IsValid, 
                               Converter={StaticResource boolToStyleImage}}"/>
           <!--  <Label 
                  Grid.Row="1" 
                  Grid.Column="1" 
                  HorizontalOptions="Center" 
                  IsVisible="{Binding Source={x:Reference emailValidator}, 
                                Path=IsValid,
                                Converter={StaticResource boolNegation}}"
                  Text="{Binding Username.Errors, Converter={StaticResource FirstValidationErrorConverter}"
                  Style="{StaticResource ValidationErrorLabelStyle}" />-->

           <Label 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    HorizontalOptions="Center" 
                    IsVisible="{Binding Source={x:Reference nonEmptyValidator},
                        Path=IsValid,
                        Converter={StaticResource boolNegation}}"
                    Text="{Binding Name.Errors, Converter={StaticResource FirstValidationErrorConverter}"
                    Style="{StaticResource ValidationErrorLabelStyle}" />

            <Label Text="Address / IP"
                   HorizontalOptions="Center"
               Style="{StaticResource labelSecondaryStyle}"
                   Grid.Row="3"
                   Grid.Column="1"
                   />


            <local:NoHelperEntry 
                   Grid.Row="4"
                   Grid.Column="1"
                   x:Name="URLEntry" 
                   Style="{StaticResource entryStyle}"
                   Placeholder="http(s)://example.com" 
                   Text="{Binding URL.Value, Mode=TwoWay}">
                   <Entry.Behaviors>
                    <behaviors:URLValidatorBehavior x:Name="urlValidator"/>
                </Entry.Behaviors>
            </local:NoHelperEntry>

            <Image Grid.Row="4" 
                   Grid.Column="2"
                   x:Name="urlSuccessErrorImage"
                   Style="{Binding Source={x:Reference urlValidator}, 
                                Path=IsValid, 
                                Converter={StaticResource boolToStyleImage}}"/>

             <Label 
                    Grid.Row="5" 
                    Grid.Column="1" 
                    HorizontalOptions="Center" 
                    IsVisible="{Binding Source={x:Reference nonEmptyValidator},
                        Path=IsValid,
                        Converter={StaticResource boolNegation}}"
                    Text="{Binding URL.Errors, Converter={StaticResource FirstValidationErrorConverter}"
                    Style="{StaticResource ValidationErrorLabelStyle}" />

            </Grid>
            <StackLayout Style="{StaticResource footerStyle}" >

            <ActivityIndicator 
            HorizontalOptions="FillAndExpand"
            VerticalOptions="FillAndExpand"
            IsRunning="{Binding IsBusy}"
            IsVisible="{Binding IsBusy}"
            />

            <Button Style="{StaticResource submitButtonStyle}"
                    Text="[ Add Monitor ]"
                    Command="{Binding AddMonitorCommand}"
                        />

        </StackLayout>
        </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
